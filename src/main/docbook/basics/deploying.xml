<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="deploying">
  <title>Deploying</title>

  <para>The JBoss Application Server is capable of serving many applications
  simultaneously. To add your application to the AS, you must
  <emphasis>deploy</emphasis> it.</para>

  <sect1 id="deploy-using-rake" revision="1">
    <title>Deploy using the Rake tasks</title>

    <para>The JBoss Rails Support package includes Rake tasks to deploy and
    undeploy your application from an instance of JBoss AS.</para>

    <para>First, the variable <envar>$JBOSS_HOME</envar> must be set to the
    path of the top of your JBoss AS5 installation.</para>

    <para><screen><prompt>$</prompt> <command>export JBOSS_HOME=/path/to/jboss</command></screen></para>

    <para>If you're using any configuration other than
    <emphasis>default</emphasis>, you must also set
    <envar>$JBOSS_CONF</envar>.</para>

    <para><screen><prompt>$</prompt> <command>export JBOSS_CONF=web</command></screen></para>

    <para>Once these variables are set, you may perform a default deployment
    using the <command>jboss:rails:deploy</command> task.</para>

    <para><screen><prompt>$</prompt> <command>rake jboss:rails:deploy</command></screen></para>

    <para>To undeploy your application, the jboss:rails:undeploy task is
    available</para>

    <para><screen><prompt>$</prompt> <command>rake jboss:rails:undeploy</command></screen></para>

    <para>The JBoss AS does not need to be running for these commands to
    work.</para>

    <para>By default, these tasks deploy your application to root of your
    JBoss AS instance, without any virtual host configuration. To access the
    application once deployed, you should use your browser to access
    <uri>http://localhost:8080/</uri>.</para>
  </sect1>

  <sect1>
    <title>Deploy using a descriptor</title>

    <para>To customize some of the aspects of deployment, instead of using the
    Rake tasks, you may manually create a <emphasis>deployment
    descriptor</emphasis>. A deployment descriptor is a small text file that
    is placed in the deploy/ directory of the AS in order to have the
    application deployed.</para>

    <sect2>
      <title>Location &amp; Naming</title>

      <para>The deployment descriptor needs to be placed within the deploy/
      directory of the AS configuration in use. If you are using the default
      configuration, the path would be:</para>

      <para><screen><filename>$JBOSS_HOME/server/default/deploy/</filename></screen></para>

      <para>The descriptor is a YAML file, and must end with the suffix of
      <filename>-rails.yml</filename>. The prefix is arbitrary, but is usually
      some form of your application's name.</para>

      <para><screen><filename>$JBOSS_HOME/server/default/deploy/<emphasis
              role="bold">myapp-rails.yml</emphasis></filename></screen></para>
    </sect2>

    <sect2>
      <title>Contents of the descriptor</title>

      <para>The descriptor has 2 main sections:</para>

      <orderedlist>
        <listitem>
          <para>General application configuration</para>
        </listitem>

        <listitem>
          <para>Web-specific configuration</para>
        </listitem>

        <listitem>
          <para>Sip-specific configuration</para>
        </listitem>
      </orderedlist>

      <sect3>
        <title>General Application Configuration</title>

        <para>The application section describes the <envar>RAILS_ROOT</envar>
        and <envar>RAILS_ENV</envar> for the deployed application. Under
        traditional (mongrel, lighttpd) deployments, this information is
        picked up through the current working directory or environment
        variables. Since JBoss AS runs from a different location, the current
        working directory has no meaning. Likewise, as multiple applications
        may be deployed within a single JBoss AS, a single global environment
        variable to set <envar>$RAILS_ENV</envar> is nonsensical.</para>

        <para><example>
            <title>Application configuration in *-rails.yml</title>

            <para><screen>application:
  RAILS_ROOT: /path/to/myapp
  RAILS_ENV:  development</screen></para>
          </example></para>
      </sect3>

      <sect3>
        <title>Web-specific configuration</title>

        <para>Traditional Rails applications are deployed individually,
        without respect to hostnames or context-path. Running under JBoss
        Rails, you may host several apps under a single host, or multiple apps
        under different hostnames.</para>

        <para>Both the virtual-host and context-path configuration are nested
        under the <emphasis>web</emphasis> section.</para>

        <sect4>
          <title>Virtual Hosts</title>

          <para>Virtual hosts allow one application to respond to
          <emphasis>www.host-one.com</emphasis>, while another running within
          the same JBoss AS to respond to
          <emphasis>www.host-two.com</emphasis>. If no host is specified, then
          the application will respond to all requests directed at the JBoss
          AS instance</para>

          <para><example>
              <title>Virtual host configuration in *-rails.yml</title>

              <para><screen>web:
  host: www.host-one.com</screen></para>
            </example></para>
        </sect4>

        <sect4>
          <title>Context paths</title>

          <para>In addition to virtual hosts, applications within a single
          JBoss AS instance may be separated purely by a <emphasis>context
          path</emphasis>. For a given host, the context path is the prefix
          used to access the application. Traditional Rails apps respond from
          the top of a site. By using a context path, you can mount
          applications at a location under the root.</para>

          <para>For example, <emphasis
          role="bold">http://www.host-one.com/app-one/</emphasis> could point
          to one application, while <emphasis
          role="bold">http://www.host-one.com/app-two/</emphasis> could point
          to another separate application.</para>

          <para><example>
              <title>Context path configuration in *-rails.yml</title>

              <para><screen>web:
  context: /app-one</screen></para>
            </example></para>

          <para>The context path and virtual host configurations can be used
          at the same time, if desired.</para>

          <para><example>
              <title>Virtual host with context path configuration in
              *-rails.ymls</title>

              <para><screen>web:
  host: www.mycorp.com
  context: /app-one</screen></para>
            </example></para>
        </sect4>
      </sect3>

      <sect3>
        <title>SIP-specific configuration</title>

        <para>The sip configuration section allows you to define the appname
        (application name) of the SIP Servlets application (mandatory) and the
        name of the class that will handle the SIP messages :</para>

        <para><example>
            <title>SIP configuration in *-rails.yml</title>

            <para><screen>sip:
  appName: DummyApplication
  rubycontroller: SipHandler</screen></para>
          </example></para>
      </sect3>

      <sect3>
        <title>Complete *-rails.yml Deployment Descriptor Example</title>

        <para><screen>application:
  RAILS_ROOT:  /path/to/myappp
  RAILS_ENV:   development
web:
  host:    www.mycorp.com
  context: /app-one
sip: 
  appName: DummyApplication
  rubycontroller: SipHandler</screen></para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
